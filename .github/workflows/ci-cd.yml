name: TaskHub Full CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    name: Build & Deploy Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        working-directory: ./taskhub-frontend
        run: npm install

      - name: Build Angular App
        working-directory: ./taskhub-frontend
        run: npm run build --prod

      - name: Build Docker Image
        working-directory: ./taskhub-frontend
        run: docker build -t frontend .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag frontend ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Deploy Frontend to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Logging in to Docker Hub..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            echo "Pulling latest frontend image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            echo "Stopping and removing old frontend container..."
            docker stop frontend || true
            docker rm frontend || true
            echo "Running new frontend container..."
            docker run -d --name frontend -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  build-backend:
    name: Build & Deploy Backend
    runs-on: ubuntu-latest
    needs: build-frontend  # Waits for frontend build to complete

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Build with Maven
        working-directory: ./taskhub-backend
        run: mvn clean package -DskipTests

      - name: Build Docker Image
        working-directory: ./taskhub-backend
        run: docker build -t backend-app .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag backend-app ${{ secrets.DOCKER_USERNAME }}/backend-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-app:latest

      - name: Deploy Backend to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Setting up Docker network and MySQL..."
            docker network inspect app-network >/dev/null 2>&1 || docker network create app-network

            if [ ! "$(docker ps -q -f name=mysql-db)" ]; then
              if [ "$(docker ps -aq -f status=exited -f name=mysql-db)" ]; then
                docker rm mysql-db
              fi
              docker run -d \
                --name mysql-db \
                --network app-network \
                -e MYSQL_ROOT_PASSWORD=Usernameroot@11 \
                -e MYSQL_DATABASE=taskhub \
                -p 3306:3306 \
                --restart unless-stopped \
                mysql:8.0
            fi

            echo "Deploying backend container..."
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend-app:latest
            docker stop backend || true
            docker rm backend || true
            docker run -d \
              --name backend \
              --network app-network \
              -p 8081:8080 \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/taskhub \
              -e SPRING_DATASOURCE_USERNAME=root \
              -e SPRING_DATASOURCE_PASSWORD=Usernameroot@11 \
              ${{ secrets.DOCKER_USERNAME }}/backend-app:latest
